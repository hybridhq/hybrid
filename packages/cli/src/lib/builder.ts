import fs from "fs"

export const writeConfig = async () => {
  const contracts = await listContracts(process.cwd() + "/contracts")

  return fs.writeFileSync(
    process.cwd() + "/.hybrid/index.ts",
    `
// This file is auto-generated by the Hybrid CLI

export const Contracts = {
  ${contracts
    .map((c) => {
      return `${c.name}: {
    abi: require("${c.file}").abi,
    bytecode: require("${c.file}").bytecode.object,
  }`
    })
    .join(",\n  ")}
};`
  )
}

const listContracts = async (dir) => {
  const files = await fs.readdirSync(dir)
  const filtered = files.filter((f) => !f.match(/(t|test)\.sol$/))
  return Promise.all(
    filtered.map((f) => {
      const name = f.replace(".sol", "")
      const file = `./out/${name}.sol/${name}.json`
      // if (!fs.existsSync(process.cwd() + "/.hybrid" + file))
      //   throw new Error(`Contract contracts/${name}.sol#${name} not found.`)

      return {
        name,
        file
      }
    })
  )
}
